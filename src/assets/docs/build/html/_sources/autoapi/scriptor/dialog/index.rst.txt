:py:mod:`scriptor.dialog`
=========================

.. py:module:: scriptor.dialog

.. autoapi-nested-parse::

   Dialogs API.

   This module provides several dialogs to be used for several user-interactions.

   - alert: Show a modal message to be confirmed
   - confirm: Show a Yes-No or Yes-No-Cancel dialog
   - input: Input dialog with various types
   - select: Select choice of several options, with multi-selection option.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   scriptor.dialog.wait
   scriptor.dialog.alert
   scriptor.dialog.confirm
   scriptor.dialog.input
   scriptor.dialog.input_date
   scriptor.dialog.input_number
   scriptor.dialog.input_string
   scriptor.dialog.input_text
   scriptor.dialog.select
   scriptor.dialog.diffcmp
   scriptor.dialog.table



.. py:function:: wait()
   :async:


.. py:function:: alert(text: str, image: str = '') -> None
   :async:

   Provide a message and stop program execution until accepted.


.. py:function:: confirm(text: str, *, title: str = 'Confirm', allow_cancel: bool = False, image: str = '') -> bool | None
   :async:

   Provide a Yes-No or Yes-No-Cancel-dialog.


.. py:function:: input(text: str, *, title: str = 'Input', type: str = 'input', use_time: bool = False, empty: bool = False, image: str = '') -> datetime.datetime | str | float | int
   :async:

   Provide a dialog asking for some value.


.. py:function:: input_date(*args, **kwargs) -> datetime.datetime
   :async:

   Provide a input asking for datetime value.


.. py:function:: input_number(*args, **kwargs) -> int | float
   :async:


.. py:function:: input_string(*args, **kwargs) -> str
   :async:


.. py:function:: input_text(*args, **kwargs) -> str
   :async:


.. py:function:: select(text: str, choices: tuple[str] | list[str] | dict[str, str], *, title: str = 'Select', multiple: bool = False, image: str = '') -> str | list[str]
   :async:


.. py:function:: diffcmp(title: str, changes: list[list[str]], image: str = '') -> None
   :async:


.. py:function:: table(header: list[str], rows: list[list[str]], *, select=False, multiple=False, image: str = '') -> str | list[str] | None
   :async:


